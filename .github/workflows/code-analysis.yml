name: "Security Checks"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  dependabot-check:
    name: "Check for Vulnerable Dependencies"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission for Gradle Wrapper
        run: chmod +x ./gradlew

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper/
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Install Dependencies
        run: ./gradlew dependencies

      - name: Analyze Dependencies for Vulnerabilities
        run: ./gradlew dependencyCheckAnalyze

      - name: Upload Dependency-Check Report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: dependency-check-report
          path: build/reports/dependency-check/dependency-check-report.html

  codeql-check:
    name: Analyze code with CodeQL
    runs-on: ubuntu-latest
    strategy:
      matrix:
        language: [ 'kotlin' ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission for Gradle Wrapper
        run: chmod +x ./gradlew

      - name: Build the project
        run: ./gradlew build -x test

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
